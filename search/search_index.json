{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Principal"},{"location":"about/","text":"","title":"Acerca de"},{"location":"practica3/","text":"Practica 3 https://github.com/pedro-jose/iaw-practica3.git Arquitectura de una aplicaci\u00f3n web LAMP en dos niveles En esta practica automatizaremos la instalaci\u00f3n y configuraci\u00f3n de una aplicaci\u00f3n web LAMP en dos m\u00e1quinas virtuales EC2 de Amazon Web Services.(Front_End y Back_End) Para realizar los scripts se ha dividido el script utilizado anteriormente, en dos uno para cada capa. Front_End Esta capa estar\u00e1 formada por un servidor Web con Apache HTTP Server. Su script quedar\u00eda de la siguiente manera: El script tendr\u00e1 todop a excepci\u00f3n del mysql, que estar\u00e1 instalado en la otra capa. Esta tendr\u00e1 apache, php, phpmyadmin, adminer, Goaccess controlado por contrase\u00f1a. Sin embargo, para instalar phpmyadmin se har\u00e1 desde el codigo fuente. Para ello, descargamos el c\u00f3digo fuente y lo descomprimimos mediante unzip(Previamente instalado, mediante apt install unzip ) Una vez descomprimimido lo moveremos a /var/www/html/ bajo el nombre de phpmyadmin, por lo que la ruta quedaria: /var/www/html/phpmyadmin . Antes de esta instalaci\u00f3n se realiz\u00f3 la configuracion del 000-default.conf , que se movi\u00f3 desde el home al /etc/apache2/sites-available/ y cuyo contenido es el que se muestra: ``` #ServerName www.example.com ServerAdmin webmaster@localhost DocumentRoot /var/www/html <Directory \"/var/www/html/stats\"> AuthType Basic AuthName \"Acceso restringido\" AuthBasicProvider file AuthUserFile \"/home/usuario/.htpasswd\" Require valid-user </Directory> ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined Hecho esto, configuramos los archivos `config.inc.php` y `config.php`, donde en ambos se debe cambiar el localhost por la ip del mysql, mediante el comando sed: - > __`sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php` - > __`sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php` Este comando nos busca y remplaza una cadena por otra. Con esto ya estar\u00eda configurada esta capa. !/bin/bash Habilitamos el modo de shell para mostrar los comandos que se ejecutan set -x Actualizamos la lista de paquetes apt update Actualizamos los paquetes apt upgrade -y Instalamos el servidor web apache apt install apache2 -y Instalamos los paquetes de PHP apt install php libapache2-mod-php php-mysql -y --------------------------------------------------------------------------------------------------------------------------------- Herramientas adicionales mkdir /var/www/html/adminer cd /var/www/html/adminer wget https://github.com/vrana/adminer/releases/download/v4.7.7/adminer-4.7.7-mysql.php mv adminer-4.7.7-mysql.php index.php Definimos variables para el htpasswd HTTPASSWD_USER=usuario HTTPASSWD_PASSWD=usuario HTTPASSWD_DIR=/home/ubuntu Instalaci\u00f3n de GoAcces echo \"deb http://deb.goaccess.io/ $(lsb_release -cs) main\" | sudo tee -a /etc/apt/sources.list.d/goaccess.list wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add - apt update apt install goaccess -y Creacion de un directorio para cosultar las estadisticas mkdir -p /var/www/html/stats nohup goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html & htpasswd -bc $HTTPASSWD_DIR/.htpasswd $HTTPASSWD_USER $HTTPASSWD_PASSWD Copiamos el archivo de configuraci\u00f3n de Apache cd /home/ubuntu cp /home/ubuntu/000-default.conf /etc/apache2/sites-available/ systemctl restart apache2 Instalacion de PHPMYADMIM IP_MYSQL=54.89.139.56 Instalamos la utilidad unzip apt install unzip -y Descargamos el codigo fuente de phpMyadmin cd/home/ubuntu rm -rf phpMyAdmin-5.0.4-all-languages.zip wget https://files.phpmyadmin.net/phpMyAdmin/5.0.4/phpMyAdmin-5.0.4-all-languages.zip Descomprimimos el archivo unzip phpMyAdmin-5.0.4-all-languages.zip Borramos el .zip rm -rf phpMyAdmin-5.0.4-all-languages.zip Movemos el directorio de phpMyadmin mv phpMyAdmin-5.0.4-all-languages/ /var/www/html/phpmyadmin Configuramos el archivo config.inc.php cd /var/www/html/phpmyadmin mv config.sample.inc.php config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php ------------------------------------------------------------------------------ Instalaci\u00f3n de la aplicaci\u00f3n web propuesta ------------------------------------------------------------------------------ cd /var/www/html rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp mv /var/www/html/iaw-practica-lamp/src/* /var/www/html/ Eliminamos contenido inutil rm -rf /var/www/html/index.html rm -rf /var/www/html/iaw-practica-lamp Cambiar permisos chown www-data:www-data * -R ## Back_End Esta capa estara formada \u00fanicamente por el mysql Server y el script de la base de datos de la aplicaci\u00f3n web propuesta. Su script est\u00e1 compuesto de la siguiente manera: Primero instalamos el mysql y declaramos variables, una para cambiar la contrase\u00f1a del mysql y otra que contiene la ip privada de la m\u00e1quina. `DB_ROOT_PASSWD=root, IP_PRIVADA_MYSQL=172.31.84.254`. Despu\u00e9s de que este instalado e mysql, configuramos el archivo `mysqld.cnf` para permitir conexiones desde la ip privada. Para ello, utilizamos el comando `sed -i`: `sed -i \"s/127.0.0.1/$IP_PRIVADA_MYSQL/\" /etc/mysql/mysql.conf.d/mysqld.cnf`. Hecho esto reiniciamos mysql y comenzamos con la implementacion del script de la aplicacion en mysql. Descargamos la base de datos e importamos el script de creaci\u00f3n de la base de datos. `mysql -u root -p$DB_ROOT_PASSWD < /home/ubuntu/iaw-practica-lamp/db/database.sql`. ### Script completo !/bin/bash Habilitamos el modo de shell para mostrar los comandos que se ejecutan set -x Actualizamos la lista de paquetes apt update Actualizamos los paquetes apt upgrade -y Instalamos MySQL Server apt install mysql-server -y Variables DB_ROOT_PASSWD=root IP_PRIVADA_MYSQL=172.31.84.254 mysql -u root <<< \"ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY '$DB_ROOT_PASSWD';\" Configuramos MySQL para permitir conexiones desde la IP privada de la instancia sed -i \"s/127.0.0.1/$IP_PRIVADA_MYSQL/\" /etc/mysql/mysql.conf.d/mysqld.cnf Reiniciamos Mysql systemctl restart mysql ------------------------------------------------------------------------------ ejecutamos el script de la base de datos de la aplicaci\u00f3n web propuesta ------------------------------------------------------------------------------ cd /home/ubuntu rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp Importamos el script de creaci\u00f3n de la base de datos mysql -u root -p$DB_ROOT_PASSWD < /home/ubuntu/iaw-practica-lamp/db/database.sql ```","title":"Practica 3"},{"location":"practica3/#practica-3","text":"https://github.com/pedro-jose/iaw-practica3.git","title":"Practica 3"},{"location":"practica3/#arquitectura-de-una-aplicacion-web-lamp-en-dos-niveles","text":"En esta practica automatizaremos la instalaci\u00f3n y configuraci\u00f3n de una aplicaci\u00f3n web LAMP en dos m\u00e1quinas virtuales EC2 de Amazon Web Services.(Front_End y Back_End) Para realizar los scripts se ha dividido el script utilizado anteriormente, en dos uno para cada capa.","title":"Arquitectura de una aplicaci\u00f3n web LAMP en dos niveles"},{"location":"practica3/#front_end","text":"Esta capa estar\u00e1 formada por un servidor Web con Apache HTTP Server. Su script quedar\u00eda de la siguiente manera: El script tendr\u00e1 todop a excepci\u00f3n del mysql, que estar\u00e1 instalado en la otra capa. Esta tendr\u00e1 apache, php, phpmyadmin, adminer, Goaccess controlado por contrase\u00f1a. Sin embargo, para instalar phpmyadmin se har\u00e1 desde el codigo fuente. Para ello, descargamos el c\u00f3digo fuente y lo descomprimimos mediante unzip(Previamente instalado, mediante apt install unzip ) Una vez descomprimimido lo moveremos a /var/www/html/ bajo el nombre de phpmyadmin, por lo que la ruta quedaria: /var/www/html/phpmyadmin . Antes de esta instalaci\u00f3n se realiz\u00f3 la configuracion del 000-default.conf , que se movi\u00f3 desde el home al /etc/apache2/sites-available/ y cuyo contenido es el que se muestra: ``` #ServerName www.example.com ServerAdmin webmaster@localhost DocumentRoot /var/www/html <Directory \"/var/www/html/stats\"> AuthType Basic AuthName \"Acceso restringido\" AuthBasicProvider file AuthUserFile \"/home/usuario/.htpasswd\" Require valid-user </Directory> ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined Hecho esto, configuramos los archivos `config.inc.php` y `config.php`, donde en ambos se debe cambiar el localhost por la ip del mysql, mediante el comando sed: - > __`sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php` - > __`sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php` Este comando nos busca y remplaza una cadena por otra. Con esto ya estar\u00eda configurada esta capa.","title":"Front_End"},{"location":"practica3/#binbash","text":"","title":"!/bin/bash"},{"location":"practica3/#habilitamos-el-modo-de-shell-para-mostrar-los-comandos-que-se-ejecutan","text":"set -x","title":"Habilitamos el modo de shell para mostrar los comandos que se ejecutan"},{"location":"practica3/#actualizamos-la-lista-de-paquetes","text":"apt update","title":"Actualizamos la lista de paquetes"},{"location":"practica3/#actualizamos-los-paquetes","text":"apt upgrade -y","title":"Actualizamos los paquetes"},{"location":"practica3/#instalamos-el-servidor-web-apache","text":"apt install apache2 -y","title":"Instalamos el servidor web apache"},{"location":"practica3/#instalamos-los-paquetes-de-php","text":"apt install php libapache2-mod-php php-mysql -y","title":"Instalamos los paquetes de PHP"},{"location":"practica3/#-","text":"","title":"---------------------------------------------------------------------------------------------------------------------------------"},{"location":"practica3/#herramientas-adicionales","text":"mkdir /var/www/html/adminer cd /var/www/html/adminer wget https://github.com/vrana/adminer/releases/download/v4.7.7/adminer-4.7.7-mysql.php mv adminer-4.7.7-mysql.php index.php","title":"Herramientas adicionales"},{"location":"practica3/#definimos-variables-para-el-htpasswd","text":"HTTPASSWD_USER=usuario HTTPASSWD_PASSWD=usuario HTTPASSWD_DIR=/home/ubuntu","title":"Definimos variables para el htpasswd"},{"location":"practica3/#instalacion-de-goacces","text":"echo \"deb http://deb.goaccess.io/ $(lsb_release -cs) main\" | sudo tee -a /etc/apt/sources.list.d/goaccess.list wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add - apt update apt install goaccess -y","title":"Instalaci\u00f3n de GoAcces"},{"location":"practica3/#creacion-de-un-directorio-para-cosultar-las-estadisticas","text":"mkdir -p /var/www/html/stats nohup goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html & htpasswd -bc $HTTPASSWD_DIR/.htpasswd $HTTPASSWD_USER $HTTPASSWD_PASSWD","title":"Creacion de un directorio para cosultar las estadisticas"},{"location":"practica3/#copiamos-el-archivo-de-configuracion-de-apache","text":"cd /home/ubuntu cp /home/ubuntu/000-default.conf /etc/apache2/sites-available/ systemctl restart apache2","title":"Copiamos el archivo de configuraci\u00f3n de Apache"},{"location":"practica3/#instalacion-de-phpmyadmim","text":"IP_MYSQL=54.89.139.56","title":"Instalacion de PHPMYADMIM"},{"location":"practica3/#instalamos-la-utilidad-unzip","text":"apt install unzip -y","title":"Instalamos la utilidad unzip"},{"location":"practica3/#descargamos-el-codigo-fuente-de-phpmyadmin","text":"cd/home/ubuntu rm -rf phpMyAdmin-5.0.4-all-languages.zip wget https://files.phpmyadmin.net/phpMyAdmin/5.0.4/phpMyAdmin-5.0.4-all-languages.zip","title":"Descargamos el codigo fuente de phpMyadmin"},{"location":"practica3/#descomprimimos-el-archivo","text":"unzip phpMyAdmin-5.0.4-all-languages.zip","title":"Descomprimimos el archivo"},{"location":"practica3/#borramos-el-zip","text":"rm -rf phpMyAdmin-5.0.4-all-languages.zip","title":"Borramos el .zip"},{"location":"practica3/#movemos-el-directorio-de-phpmyadmin","text":"mv phpMyAdmin-5.0.4-all-languages/ /var/www/html/phpmyadmin","title":"Movemos el directorio de phpMyadmin"},{"location":"practica3/#configuramos-el-archivo-configincphp","text":"cd /var/www/html/phpmyadmin mv config.sample.inc.php config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php","title":"Configuramos el archivo config.inc.php"},{"location":"practica3/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"practica3/#instalacion-de-la-aplicacion-web-propuesta","text":"","title":"Instalaci\u00f3n de la aplicaci\u00f3n web propuesta"},{"location":"practica3/#-_2","text":"cd /var/www/html rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp mv /var/www/html/iaw-practica-lamp/src/* /var/www/html/","title":"------------------------------------------------------------------------------"},{"location":"practica3/#eliminamos-contenido-inutil","text":"rm -rf /var/www/html/index.html rm -rf /var/www/html/iaw-practica-lamp","title":"Eliminamos contenido inutil"},{"location":"practica3/#cambiar-permisos","text":"chown www-data:www-data * -R ## Back_End Esta capa estara formada \u00fanicamente por el mysql Server y el script de la base de datos de la aplicaci\u00f3n web propuesta. Su script est\u00e1 compuesto de la siguiente manera: Primero instalamos el mysql y declaramos variables, una para cambiar la contrase\u00f1a del mysql y otra que contiene la ip privada de la m\u00e1quina. `DB_ROOT_PASSWD=root, IP_PRIVADA_MYSQL=172.31.84.254`. Despu\u00e9s de que este instalado e mysql, configuramos el archivo `mysqld.cnf` para permitir conexiones desde la ip privada. Para ello, utilizamos el comando `sed -i`: `sed -i \"s/127.0.0.1/$IP_PRIVADA_MYSQL/\" /etc/mysql/mysql.conf.d/mysqld.cnf`. Hecho esto reiniciamos mysql y comenzamos con la implementacion del script de la aplicacion en mysql. Descargamos la base de datos e importamos el script de creaci\u00f3n de la base de datos. `mysql -u root -p$DB_ROOT_PASSWD < /home/ubuntu/iaw-practica-lamp/db/database.sql`. ### Script completo","title":"Cambiar permisos"},{"location":"practica3/#binbash_1","text":"","title":"!/bin/bash"},{"location":"practica3/#habilitamos-el-modo-de-shell-para-mostrar-los-comandos-que-se-ejecutan_1","text":"set -x","title":"Habilitamos el modo de shell para mostrar los comandos que se ejecutan"},{"location":"practica3/#actualizamos-la-lista-de-paquetes_1","text":"apt update","title":"Actualizamos la lista de paquetes"},{"location":"practica3/#actualizamos-los-paquetes_1","text":"apt upgrade -y","title":"Actualizamos los paquetes"},{"location":"practica3/#instalamos-mysql-server","text":"apt install mysql-server -y","title":"Instalamos MySQL Server"},{"location":"practica3/#variables","text":"DB_ROOT_PASSWD=root IP_PRIVADA_MYSQL=172.31.84.254 mysql -u root <<< \"ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY '$DB_ROOT_PASSWD';\"","title":"Variables"},{"location":"practica3/#configuramos-mysql-para-permitir-conexiones-desde-la-ip-privada-de-la-instancia","text":"sed -i \"s/127.0.0.1/$IP_PRIVADA_MYSQL/\" /etc/mysql/mysql.conf.d/mysqld.cnf","title":"Configuramos MySQL para permitir conexiones desde la IP privada de la instancia"},{"location":"practica3/#reiniciamos-mysql","text":"systemctl restart mysql","title":"Reiniciamos Mysql"},{"location":"practica3/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"practica3/#ejecutamos-el-script-de-la-base-de-datos-de-la-aplicacion-web-propuesta","text":"","title":"ejecutamos el script de la base de datos de la aplicaci\u00f3n web propuesta"},{"location":"practica3/#-_4","text":"cd /home/ubuntu rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp","title":"------------------------------------------------------------------------------"},{"location":"practica3/#importamos-el-script-de-creacion-de-la-base-de-datos","text":"mysql -u root -p$DB_ROOT_PASSWD < /home/ubuntu/iaw-practica-lamp/db/database.sql ```","title":"Importamos el script de creaci\u00f3n de la base de datos"},{"location":"practicahttps/","text":"### HTTPS con Let\u2019s Encrypt y Certbot con docker En esta pr\u00e1ctica vamos a habilitar el protocolo HTTPS en un sitio web ejecutado desde docker que se estar\u00e1 ejecutando en una instancia EC2 de Amazon Web Services (AWS). Tareas a realizar 1. Paso1 Registrar un nombre de dominio en Freenom y configurar dns para que el dominio haga referencia a la ip de la instancia. Tendremos que a\u00f1adir dos registros DNS de tipo A con la direcci\u00f3n IP p\u00fablica de su instancia EC2 de AWS. Un registro estar\u00e1 en blanco para que pueda resolver el nombre de dominio sin las www y el otro registro estar\u00e1 con las www. 2. Paso 2 Haremos uso del yml de la practica de prestashop, a\u00f1adiendo las siguientes lienas: https-portal: image: steveltn/https-portal:1 ports: - 80:80 - 443:443 restart: always environment: DOMAINS: 'practica-https.ml -> http://prestashop:80' STAGE: 'production' networks: - frontend-network Despues, lanzamos el docker compose y lo tendriamos funcionando. Despu\u00e9s de la instalaci\u00f3n, habr\u00e1 que activar el uso del ssl, para ello iremos a phpmyadmin e introducimos estas l\u00edneas en la base de prestashop. - > UPDATE ps_configuration SET value=1 WHERE name=\"PS_SSL_ENABLED\" UPDATE ps_configuration SET value=1 WHERE name=\"PS_SSL_ENABLED\" Hecho esto ya tendremos nuestra tienda lista y segura.","title":"Practica https"},{"location":"practicahttps/#tareas-a-realizar","text":"","title":"Tareas a realizar"},{"location":"practicahttps/#1-paso1","text":"Registrar un nombre de dominio en Freenom y configurar dns para que el dominio haga referencia a la ip de la instancia. Tendremos que a\u00f1adir dos registros DNS de tipo A con la direcci\u00f3n IP p\u00fablica de su instancia EC2 de AWS. Un registro estar\u00e1 en blanco para que pueda resolver el nombre de dominio sin las www y el otro registro estar\u00e1 con las www.","title":"1. Paso1"},{"location":"practicahttps/#2-paso-2","text":"Haremos uso del yml de la practica de prestashop, a\u00f1adiendo las siguientes lienas: https-portal: image: steveltn/https-portal:1 ports: - 80:80 - 443:443 restart: always environment: DOMAINS: 'practica-https.ml -> http://prestashop:80' STAGE: 'production' networks: - frontend-network Despues, lanzamos el docker compose y lo tendriamos funcionando. Despu\u00e9s de la instalaci\u00f3n, habr\u00e1 que activar el uso del ssl, para ello iremos a phpmyadmin e introducimos estas l\u00edneas en la base de prestashop. - > UPDATE ps_configuration SET value=1 WHERE name=\"PS_SSL_ENABLED\" UPDATE ps_configuration SET value=1 WHERE name=\"PS_SSL_ENABLED\" Hecho esto ya tendremos nuestra tienda lista y segura.","title":"2. Paso 2"}]}