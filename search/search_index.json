{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"about/","text":"Practica de IAW, hecha por Pedro Jos\u00e9 Salvador Fajardo","title":"Acerca de"},{"location":"practica3/","text":"Practica 3 https://github.com/pedro-jose/iaw-practica3.git Arquitectura de una aplicaci\u00f3n web LAMP en dos niveles En esta practica automatizaremos la instalaci\u00f3n y configuraci\u00f3n de una aplicaci\u00f3n web LAMP en dos m\u00e1quinas virtuales EC2 de Amazon Web Services.(Front_End y Back_End) Para realizar los scripts se ha dividido el script utilizado anteriormente, en dos uno para cada capa. Front_End Esta capa estar\u00e1 formada por un servidor Web con Apache HTTP Server. Su script quedar\u00eda de la siguiente manera: El script tendr\u00e1 todop a excepci\u00f3n del mysql, que estar\u00e1 instalado en la otra capa. Esta tendr\u00e1 apache, php, phpmyadmin, adminer, Goaccess controlado por contrase\u00f1a. Sin embargo, para instalar phpmyadmin se har\u00e1 desde el codigo fuente. Para ello, descargamos el c\u00f3digo fuente y lo descomprimimos mediante unzip(Previamente instalado, mediante apt install unzip ) Una vez descomprimimido lo moveremos a /var/www/html/ bajo el nombre de phpmyadmin, por lo que la ruta quedaria: /var/www/html/phpmyadmin . Antes de esta instalaci\u00f3n se realiz\u00f3 la configuracion del 000-default.conf , que se movi\u00f3 desde el home al /etc/apache2/sites-available/ y cuyo contenido es el que se muestra: <VirtualHost *:80> #ServerName www.example.com ServerAdmin webmaster@localhost DocumentRoot /var/www/html <Directory \"/var/www/html/stats\"> AuthType Basic AuthName \"Acceso restringido\" AuthBasicProvider file AuthUserFile \"/home/usuario/.htpasswd\" Require valid-user </Directory> ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost> Hecho esto, configuramos los archivos config.inc.php y config.php , donde en ambos se debe cambiar el localhost por la ip del mysql, mediante el comando sed: __ sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php __ sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php Este comando nos busca y remplaza una cadena por otra. Con esto ya estar\u00eda configurada esta capa. #!/bin/bash # Habilitamos el modo de shell para mostrar los comandos que se ejecutan set -x # Actualizamos la lista de paquetes apt update # Actualizamos los paquetes apt upgrade -y # Instalamos el servidor web apache apt install apache2 -y # Instalamos los paquetes de PHP apt install php libapache2-mod-php php-mysql -y #--------------------------------------------------------------------------------------------------------------------------------- # Herramientas adicionales mkdir /var/www/html/adminer cd /var/www/html/adminer wget https://github.com/vrana/adminer/releases/download/v4.7.7/adminer-4.7.7-mysql.php mv adminer-4.7.7-mysql.php index.php # Definimos variables para el htpasswd HTTPASSWD_USER=usuario HTTPASSWD_PASSWD=usuario HTTPASSWD_DIR=/home/ubuntu # Instalaci\u00f3n de GoAcces echo \"deb http://deb.goaccess.io/ $(lsb_release -cs) main\" | sudo tee -a /etc/apt/sources.list.d/goaccess.list wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add - apt update apt install goaccess -y # Creacion de un directorio para cosultar las estadisticas mkdir -p /var/www/html/stats nohup goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html & htpasswd -bc $HTTPASSWD_DIR/.htpasswd $HTTPASSWD_USER $HTTPASSWD_PASSWD # Copiamos el archivo de configuraci\u00f3n de Apache cd /home/ubuntu cp /home/ubuntu/000-default.conf /etc/apache2/sites-available/ systemctl restart apache2 # Instalacion de PHPMYADMIM IP_MYSQL=54.89.139.56 # Instalamos la utilidad unzip apt install unzip -y # Descargamos el codigo fuente de phpMyadmin cd/home/ubuntu rm -rf phpMyAdmin-5.0.4-all-languages.zip wget https://files.phpmyadmin.net/phpMyAdmin/5.0.4/phpMyAdmin-5.0.4-all-languages.zip # Descomprimimos el archivo unzip phpMyAdmin-5.0.4-all-languages.zip # Borramos el .zip rm -rf phpMyAdmin-5.0.4-all-languages.zip # Movemos el directorio de phpMyadmin mv phpMyAdmin-5.0.4-all-languages/ /var/www/html/phpmyadmin #Configuramos el archivo config.inc.php cd /var/www/html/phpmyadmin mv config.sample.inc.php config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php # ------------------------------------------------------------------------------ # Instalaci\u00f3n de la aplicaci\u00f3n web propuesta # ------------------------------------------------------------------------------ cd /var/www/html rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp mv /var/www/html/iaw-practica-lamp/src/* /var/www/html/ # Eliminamos contenido inutil rm -rf /var/www/html/index.html rm -rf /var/www/html/iaw-practica-lamp # Cambiar permisos chown www-data:www-data * -R Back_End Esta capa estara formada \u00fanicamente por el mysql Server y el script de la base de datos de la aplicaci\u00f3n web propuesta. Su script est\u00e1 compuesto de la siguiente manera: Primero instalamos el mysql y declaramos variables, una para cambiar la contrase\u00f1a del mysql y otra que contiene la ip privada de la m\u00e1quina. DB_ROOT_PASSWD=root, IP_PRIVADA_MYSQL=172.31.84.254 . Despu\u00e9s de que este instalado e mysql, configuramos el archivo mysqld.cnf para permitir conexiones desde la ip privada. Para ello, utilizamos el comando sed -i : sed -i \"s/127.0.0.1/$IP_PRIVADA_MYSQL/\" /etc/mysql/mysql.conf.d/mysqld.cnf . Hecho esto reiniciamos mysql y comenzamos con la implementacion del script de la aplicacion en mysql. Descargamos la base de datos e importamos el script de creaci\u00f3n de la base de datos. mysql -u root -p$DB_ROOT_PASSWD < /home/ubuntu/iaw-practica-lamp/db/database.sql . Script completo #!/bin/bash # Habilitamos el modo de shell para mostrar los comandos que se ejecutan set -x # Actualizamos la lista de paquetes apt update # Actualizamos los paquetes apt upgrade -y # Instalamos MySQL Server apt install mysql-server -y #Variables DB_ROOT_PASSWD=root IP_PRIVADA_MYSQL=172.31.84.254 mysql -u root <<< \"ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY '$DB_ROOT_PASSWD';\" # Configuramos MySQL para permitir conexiones desde la IP privada de la instancia sed -i \"s/127.0.0.1/$IP_PRIVADA_MYSQL/\" /etc/mysql/mysql.conf.d/mysqld.cnf # Reiniciamos Mysql systemctl restart mysql # ------------------------------------------------------------------------------ # ejecutamos el script de la base de datos de la aplicaci\u00f3n web propuesta # ------------------------------------------------------------------------------ cd /home/ubuntu rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp # Importamos el script de creaci\u00f3n de la base de datos mysql -u root -p$DB_ROOT_PASSWD < /home/ubuntu/iaw-practica-lamp/db/database.sql","title":"Practica 3"},{"location":"practica3/#practica-3","text":"https://github.com/pedro-jose/iaw-practica3.git","title":"Practica 3"},{"location":"practica3/#arquitectura-de-una-aplicacion-web-lamp-en-dos-niveles","text":"En esta practica automatizaremos la instalaci\u00f3n y configuraci\u00f3n de una aplicaci\u00f3n web LAMP en dos m\u00e1quinas virtuales EC2 de Amazon Web Services.(Front_End y Back_End) Para realizar los scripts se ha dividido el script utilizado anteriormente, en dos uno para cada capa.","title":"Arquitectura de una aplicaci\u00f3n web LAMP en dos niveles"},{"location":"practica3/#front_end","text":"Esta capa estar\u00e1 formada por un servidor Web con Apache HTTP Server. Su script quedar\u00eda de la siguiente manera: El script tendr\u00e1 todop a excepci\u00f3n del mysql, que estar\u00e1 instalado en la otra capa. Esta tendr\u00e1 apache, php, phpmyadmin, adminer, Goaccess controlado por contrase\u00f1a. Sin embargo, para instalar phpmyadmin se har\u00e1 desde el codigo fuente. Para ello, descargamos el c\u00f3digo fuente y lo descomprimimos mediante unzip(Previamente instalado, mediante apt install unzip ) Una vez descomprimimido lo moveremos a /var/www/html/ bajo el nombre de phpmyadmin, por lo que la ruta quedaria: /var/www/html/phpmyadmin . Antes de esta instalaci\u00f3n se realiz\u00f3 la configuracion del 000-default.conf , que se movi\u00f3 desde el home al /etc/apache2/sites-available/ y cuyo contenido es el que se muestra: <VirtualHost *:80> #ServerName www.example.com ServerAdmin webmaster@localhost DocumentRoot /var/www/html <Directory \"/var/www/html/stats\"> AuthType Basic AuthName \"Acceso restringido\" AuthBasicProvider file AuthUserFile \"/home/usuario/.htpasswd\" Require valid-user </Directory> ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost> Hecho esto, configuramos los archivos config.inc.php y config.php , donde en ambos se debe cambiar el localhost por la ip del mysql, mediante el comando sed: __ sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php __ sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php Este comando nos busca y remplaza una cadena por otra. Con esto ya estar\u00eda configurada esta capa. #!/bin/bash # Habilitamos el modo de shell para mostrar los comandos que se ejecutan set -x # Actualizamos la lista de paquetes apt update # Actualizamos los paquetes apt upgrade -y # Instalamos el servidor web apache apt install apache2 -y # Instalamos los paquetes de PHP apt install php libapache2-mod-php php-mysql -y #--------------------------------------------------------------------------------------------------------------------------------- # Herramientas adicionales mkdir /var/www/html/adminer cd /var/www/html/adminer wget https://github.com/vrana/adminer/releases/download/v4.7.7/adminer-4.7.7-mysql.php mv adminer-4.7.7-mysql.php index.php # Definimos variables para el htpasswd HTTPASSWD_USER=usuario HTTPASSWD_PASSWD=usuario HTTPASSWD_DIR=/home/ubuntu # Instalaci\u00f3n de GoAcces echo \"deb http://deb.goaccess.io/ $(lsb_release -cs) main\" | sudo tee -a /etc/apt/sources.list.d/goaccess.list wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add - apt update apt install goaccess -y # Creacion de un directorio para cosultar las estadisticas mkdir -p /var/www/html/stats nohup goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html & htpasswd -bc $HTTPASSWD_DIR/.htpasswd $HTTPASSWD_USER $HTTPASSWD_PASSWD # Copiamos el archivo de configuraci\u00f3n de Apache cd /home/ubuntu cp /home/ubuntu/000-default.conf /etc/apache2/sites-available/ systemctl restart apache2 # Instalacion de PHPMYADMIM IP_MYSQL=54.89.139.56 # Instalamos la utilidad unzip apt install unzip -y # Descargamos el codigo fuente de phpMyadmin cd/home/ubuntu rm -rf phpMyAdmin-5.0.4-all-languages.zip wget https://files.phpmyadmin.net/phpMyAdmin/5.0.4/phpMyAdmin-5.0.4-all-languages.zip # Descomprimimos el archivo unzip phpMyAdmin-5.0.4-all-languages.zip # Borramos el .zip rm -rf phpMyAdmin-5.0.4-all-languages.zip # Movemos el directorio de phpMyadmin mv phpMyAdmin-5.0.4-all-languages/ /var/www/html/phpmyadmin #Configuramos el archivo config.inc.php cd /var/www/html/phpmyadmin mv config.sample.inc.php config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/phpmyadmin/config.inc.php sed -i \"s/localhost/$IP_MYSQL/\" /var/www/html/config.php # ------------------------------------------------------------------------------ # Instalaci\u00f3n de la aplicaci\u00f3n web propuesta # ------------------------------------------------------------------------------ cd /var/www/html rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp mv /var/www/html/iaw-practica-lamp/src/* /var/www/html/ # Eliminamos contenido inutil rm -rf /var/www/html/index.html rm -rf /var/www/html/iaw-practica-lamp # Cambiar permisos chown www-data:www-data * -R","title":"Front_End"},{"location":"practica3/#back_end","text":"Esta capa estara formada \u00fanicamente por el mysql Server y el script de la base de datos de la aplicaci\u00f3n web propuesta. Su script est\u00e1 compuesto de la siguiente manera: Primero instalamos el mysql y declaramos variables, una para cambiar la contrase\u00f1a del mysql y otra que contiene la ip privada de la m\u00e1quina. DB_ROOT_PASSWD=root, IP_PRIVADA_MYSQL=172.31.84.254 . Despu\u00e9s de que este instalado e mysql, configuramos el archivo mysqld.cnf para permitir conexiones desde la ip privada. Para ello, utilizamos el comando sed -i : sed -i \"s/127.0.0.1/$IP_PRIVADA_MYSQL/\" /etc/mysql/mysql.conf.d/mysqld.cnf . Hecho esto reiniciamos mysql y comenzamos con la implementacion del script de la aplicacion en mysql. Descargamos la base de datos e importamos el script de creaci\u00f3n de la base de datos. mysql -u root -p$DB_ROOT_PASSWD < /home/ubuntu/iaw-practica-lamp/db/database.sql .","title":"Back_End"},{"location":"practica3/#script-completo","text":"#!/bin/bash # Habilitamos el modo de shell para mostrar los comandos que se ejecutan set -x # Actualizamos la lista de paquetes apt update # Actualizamos los paquetes apt upgrade -y # Instalamos MySQL Server apt install mysql-server -y #Variables DB_ROOT_PASSWD=root IP_PRIVADA_MYSQL=172.31.84.254 mysql -u root <<< \"ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY '$DB_ROOT_PASSWD';\" # Configuramos MySQL para permitir conexiones desde la IP privada de la instancia sed -i \"s/127.0.0.1/$IP_PRIVADA_MYSQL/\" /etc/mysql/mysql.conf.d/mysqld.cnf # Reiniciamos Mysql systemctl restart mysql # ------------------------------------------------------------------------------ # ejecutamos el script de la base de datos de la aplicaci\u00f3n web propuesta # ------------------------------------------------------------------------------ cd /home/ubuntu rm -rf iaw-practica-lamp git clone https://github.com/josejuansanchez/iaw-practica-lamp # Importamos el script de creaci\u00f3n de la base de datos mysql -u root -p$DB_ROOT_PASSWD < /home/ubuntu/iaw-practica-lamp/db/database.sql","title":"Script completo"},{"location":"practicahttps/","text":"HTTPS con Let\u2019s Encrypt y Certbot En esta pr\u00e1ctica vamos a habilitar el protocolo HTTPS en un sitio web WordPress que se estar\u00e1 ejecutando en una instancia EC2 de Amazon Web Services (AWS). Tareas a realizar 1. Paso1 Registrar un nombre de dominio en Freenom y configurar dns para que el dominio haga referencia a la ip de la instancia. Tendremos que a\u00f1adir dos registros DNS de tipo A con la direcci\u00f3n IP p\u00fablica de su instancia EC2 de AWS. Un registro estar\u00e1 en blanco para que pueda resolver el nombre de dominio sin las www y el otro registro estar\u00e1 con las www. 2. Paso 2 Haremos uso del script de la practica de Wordpress-CLI, a\u00f1adiendo las siguientes lienas: ``` Instalaci\u00f3n de cerbot Realizamos la instalaci\u00f3n y actualizaci\u00f3n de snapd. snap install core snap refresh core Eliminamos si existiese alguna instalaci\u00f3n previa de certbot con apt. apt-get remove certbot Instalamos el cliente de Certbot con snapd. snap install --classic certbot Creamos una alias para el comando certbot. ln -s /snap/bin/certbot /usr/bin/certbot Obtenemos el certificado y configuramos el servidor web Apache. sudo certbot --apache -m demo@demo.es --agree-tos -d practica-https.tk ``` Ahora solo nos faltaria cambiar una \u00faltima cosa y es: wp core install --url=http://practica-https.tk --title=\"Practica HTTPS\" --admin_user=admin --admin_password=admin --admin_email=test@test.com --allow-root Sustituir la url con la ip por el nombre de dominio. Ya con esto podremos acceder a trav\u00e9s del nombre y de forma segura.","title":"Practica HTTPS"},{"location":"practicahttps/#https-con-lets-encrypt-y-certbot","text":"En esta pr\u00e1ctica vamos a habilitar el protocolo HTTPS en un sitio web WordPress que se estar\u00e1 ejecutando en una instancia EC2 de Amazon Web Services (AWS).","title":"HTTPS con Let\u2019s Encrypt y Certbot"},{"location":"practicahttps/#tareas-a-realizar","text":"","title":"Tareas a realizar"},{"location":"practicahttps/#1-paso1","text":"Registrar un nombre de dominio en Freenom y configurar dns para que el dominio haga referencia a la ip de la instancia. Tendremos que a\u00f1adir dos registros DNS de tipo A con la direcci\u00f3n IP p\u00fablica de su instancia EC2 de AWS. Un registro estar\u00e1 en blanco para que pueda resolver el nombre de dominio sin las www y el otro registro estar\u00e1 con las www.","title":"1. Paso1"},{"location":"practicahttps/#2-paso-2","text":"Haremos uso del script de la practica de Wordpress-CLI, a\u00f1adiendo las siguientes lienas: ```","title":"2. Paso 2"},{"location":"practicahttps/#instalacion-de-cerbot","text":"Realizamos la instalaci\u00f3n y actualizaci\u00f3n de snapd. snap install core snap refresh core Eliminamos si existiese alguna instalaci\u00f3n previa de certbot con apt. apt-get remove certbot Instalamos el cliente de Certbot con snapd. snap install --classic certbot Creamos una alias para el comando certbot. ln -s /snap/bin/certbot /usr/bin/certbot Obtenemos el certificado y configuramos el servidor web Apache. sudo certbot --apache -m demo@demo.es --agree-tos -d practica-https.tk ``` Ahora solo nos faltaria cambiar una \u00faltima cosa y es: wp core install --url=http://practica-https.tk --title=\"Practica HTTPS\" --admin_user=admin --admin_password=admin --admin_email=test@test.com --allow-root Sustituir la url con la ip por el nombre de dominio. Ya con esto podremos acceder a trav\u00e9s del nombre y de forma segura.","title":"Instalaci\u00f3n de cerbot"}]}